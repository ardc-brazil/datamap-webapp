#################################
### Authentication
#################################
# Secrets like the one below should go into `.env.local` instead to avoid pushing
# them to a repository, this is an exception for the sake of the example
TOKEN_SECRET="this-is-a-secret-value-with-at-least-32-characters"

OAUTH_ORCID_CLIENT_ID=cliend_id
OAUTH_ORCID_CLIENT_SECRET=secret_id
OAUTH_ORCID_REDIRECT_URI_BASE=https://localhost:3000/orcid-oauth-callback
# You have to encode your username and password with base64. The format is: base64({username}:{password})
OAUTH_DATAMAP_BASIC_AUTH=WW91IGhhdmUgdG8gZW5jb2RlIHlvdXIgdXNlcm5hbWUgYW5kIHBhc3N3b3JkIHdpdGggYmFzZTY0LgpUaGUgZm9ybWF0IGlzOiBiYXNlNjQoe3VzZXJuYW1lfTp7cGFzc3dvcmR9KQ==
GITHUB_ID=client_id
GITHUB_SECRET=secret_id

# DataMap API
DATAMAP_BASE_URL=http://localhost/api/v1
DATAMAP_API_KEY=api_key
DATAMAP_API_SECRET=api_secret
# FileUpload authz secret. Use `openssl rand -base64 32` to generate a good secret
AUTH_FILE_UPLOAD_TOKEN_SECRET=file-upload-fake-token

# Use `openssl rand -base64 32` to generate a good secret
# see more: https://next-auth.js.org/errors#no_secret
NEXTAUTH_SECRET=fake-secret

############################
# Public env vars
############################ 

# TUS service endpoint is the file uploader service from DataMap Data Platform
NEXT_PUBLIC_TUS_SERVICE_ENDPOINT=http://localhost:1080/files/